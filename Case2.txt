# 题目：实现一种多用户优先级的执行计划缓存机制

1. 修改核心层文件，实现功能。
2. 在Plan cache中记录所属user、命中次数（HIT_COUNT）、最后一次命中到现在持续时间（LHT）；
3. 可以为用户指定priority（优先级，例如从高到低为0～2）和MaxCount（该用户可以拥有的最大执行计划缓存个数）；
4. 增加参数MaxTotalCount（所有用户执行计划缓存的最大个数）。
5. 当该用户缓存的执行计划个数达到MaxCount时，暂停插入新的缓存，直到有旧的缓存被淘汰后，才能插入。
6. 数据库执行计划缓存数量分低中高三个水位，低水位表示MaxTotalCount的50%，中水位表示70%，高水位表示90%。当缓存的执行计划个数达到MaxTotalCount的70%时，优先级为2的用户暂停插入缓存，优先级为0和1的用户可以正常插入；当缓存的执行计划个数达到MaxTotalCount的90%时，执行缓存淘汰，直到MaxTotalCount的50%为止。
7. 淘汰策略要求按优先级顺序，优先淘汰优先级低的执行计划缓存。要求实现LRU（最近最少使用）淘汰机制（LRU算法的具体实现自行决定）。

8. 记录审计日志。日志包含执行计划缓存清理以及缓存事件这两类。缓存事件指当前执行计划缓存达到低水位、中水位、高水位时。日志需要记录用户信息、日志写入时间、缓存统计信息（用户及对应的执行计划缓存总数）。
9. 授权用户可查看并导出计划缓存审计日志AuditCache.log。

输出：

1. patch
2. 源码
3. 二进制文件
4. 测试结果验证说明
5. 录屏
6. 设计文档
7. AuditCache.log
8. 编译记录
9. 测试用例

